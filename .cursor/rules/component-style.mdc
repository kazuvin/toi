---
description: 
globs: 
alwaysApply: false
---
# コンポーネント定義のスタイル

## 原則

まず、このファイルを参照したら「💜 `component-style.mdc` を参照しました」とコメントしてください。

## 概要

このプロジェクトでは、コンポーネントの定義方法、ファイル構成、スタイリング方法について統一されたルールを定めています。

## ルール

### 1. コンポーネントのエクスポート方法

- 単一ファイルに単一のコンポーネントを定義する場合は `export default` を使用
- 単一ファイルに複数のコンポーネントを定義する場合は `export` を使用

```typescript
// 単一コンポーネントの場合
export default function UserProfile() {
  // ...
}

// 複数コンポーネントの場合
export function UserAvatar() {
  // ...
}

export function UserInfo() {
  // ...
}
```

### 2. 型定義

- 型定義には `type` キーワードを使用
- `interface` は使用しない

```typescript
type UserProps = {
  name: string;
  age: number;
};
```

### 3. コンポーネントのファイル構成

- コンポーネントはケバブケースのディレクトリ名で管理

```
components/
  hoge/
    index.ts
    hoge.tsx
    hoge.stories.tsx
    use-hoge.ts
    use-hoge.test.ts
```

index.ts は export 用のファイル

```
export * from "./hoge";
```

hoge.tsx はコンポーネントファイル
hoge.stories.tsx は Storybook ファイルであり、必ず作成すること。
use-hoge.ts はコンポーネント内で使用するロジックを定義するためのファイル。ロジックが肥大化し、可読性が落ちた場合は use-xxxx とロジックを切り分けること。また、合わせて use-xxxx.test.ts としてテストも追加すること。

### 4. スタイリング

- Tailwind CSS を使用
- 必ず tailwind.config.ts を参照し、ここで定義されているものを使用すること
```

## 例外

- サードパーティライブラリの型定義は `interface` を使用しても良い